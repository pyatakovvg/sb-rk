
upstream site {
  server site_ui:80;
}


server {

  listen 80;

  server_name sb-rk.ru www.sb-rk.ru;

  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  location / {
    return 301 https://$host$request_uri;
  }
}

server {

  listen 443 ssl;

  server_name sb-rk.ru www.sb-rk.ru;

  ssl_certificate /etc/letsencrypt/live/sb-rk.ru/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/sb-rk.ru/privkey.pem;

  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  if ($host ~ '^www\.') {
    set $https_redirect 1;
  }

  if ($https_redirect = 1) {
    return 301 https://$host$request_uri;
  }

  location / {
    try_files $uri @prerender;
  }

  location @prerender {

    proxy_set_header X-Prerender-Token "prerender";
    proxy_http_version                 1.1;
    proxy_cache_bypass                 $http_upgrade;

    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        "upgrade";
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host  $host;
    proxy_set_header X-Forwarded-Port  $server_port;

    set $prerender 0;

    if ($http_user_agent ~* "googlebot|Yandex|twitterbot|facebookexternalhit|W3C_Validator|whatsapp") {
      set $prerender 1;
    }

    if ($args ~ "_escaped_fragment_") {
      set $prerender 1;
    }

    if ($http_user_agent ~ "Prerender") {
      set $prerender 0;
    }

    if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
      set $prerender 0;
    }

    #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
    resolver 8.8.8.8;

    if ($prerender = 1) {
      set $prerender "service.prerender.io";
      rewrite .* /$scheme://$host$request_uri? break;
      proxy_pass https://$prerender;
    }

    if ($prerender = 0) {
      proxy_pass http://site$request_uri;
    }
  }
}
